language: c
sudo: required
cache:
  directories:
  - $HOME/.cabal
  - $HOME/.ghc
  - $HOME/.stack
before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log

matrix:
  include:
  ## We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  ## https://github.com/hvr/multi-ghc-travis
  ## - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7
    ## compiler: ": #GHC 8.0.1"
    ## addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  ## Build with the newest GHC and cabal-install. This is an accepted failure,
  ## see below.
  #- env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
    #compiler: ": #GHC HEAD"
    #addons: {apt: {packages: [cabal-install-head,ghc-head,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default"
    addons: {apt: {packages: [ghc-8.0.1], sources: [hvr-ghc]}, ssh_known_hosts: travispoulsen.com}

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  allow_failures:
  - env: BUILD=cabal GHCVER=8.0.1  CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
  - bash _scripts/pre_install.sh
  # Using compiler above sets CC to an invalid value, so unset it
  - unset CC

  # We want to always allow newer versions of packages when building on GHC HEAD
  - CABALARGS=""
  - if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

  # Download and unpack the stack executable
  - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
  - mkdir -p ~/.local/bin
  - |
    if [ `uname` = "Darwin" ]
    then
      travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
    else
      travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    fi

    # Use the more reliable S3 mirror of Hackage
    mkdir -p $HOME/.cabal
    echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
    echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

    if [ "$CABALVER" != "1.16" ]
    then
      echo 'jobs: $ncpus' >> $HOME/.cabal/config
    fi

  # Get the list of packages from the stack.yaml file
  - PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

install:
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - if [ -f configure.ac ]; then autoreconf -i; fi
  - |
    set -ex
      stack build -j1
      stack exec site clean
      stack exec site build
    set +ex
#script:
#- |
  #set -ex
    #stack build -j1
    #stack exec site clean
    #stack exec site build
  #set +ex
after_success:
  - bash _scripts/deploy.sh
