---
title: Fifty in Fifty 
tags: computer science, literature, learning
---
* From Turing to typed lambda calculus, abstract syntax trees to algebraic data types
My educational background is not in computer science. Aside from a computer science/C++ course in high school, I've primarily been self-educated when it comes to programming and development. I continue to grow more capable as a programmer, I've always wondered what I was missing in the foundations of computer science. That said, I was inspired by [[https://blog.acolyer.org/2016/07/22/end-of-term-and-the-power-of-compound-interest/][this post]] at [[https://blog.acolyer.org][the morning paper]] to work towards shoring up my knowledge of the foundations of computer science.


** The plan
Over the next fifty weeks[fn:1], I'm going to read and summarize my notes/thoughts on fifty "key" papers on computer science.

* Footnotes

[fn:1] Give or take; life will certainly get in the way.
